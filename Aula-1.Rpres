Aula 1 — Introdução ao R
========================================================
author: Wilson Freitas

O que é o R?
========================================================
type: sub-section

O que é o R?
========================================================
title: false

R é um ambiente integrado para análise de dados e criação de visualização computacional, que oferece entre outras coisas:

- uma grande coleção de pacotes para estatística e análise de dados
- uma linguagem para expressar modelos estatísticos e ferramentas para desenvolver modelos lineares e não lineares
- diversas funcionalidades para a criação de gráficos
- uma linguagem de programação orientada a objetos que pode facilmente ser extendida pela comunidade e integrada com outras linguagens

Uma olhadinha no R
========================================================
incremental: true

```{r}
2+3
sqrt(3/4)/(1/3 - 2/pi^2)
```

Uma olhadinha no R
========================================================
incremental: true

```{r}
library(MASS)
mean(chem)
m <- mean(chem); v <- var(chem)/length(chem)
m/sqrt(v)
```

Pedindo ajuda
========================================================

```{r, eval=FALSE}
help(mean)
?mean
help("[")
?"["
```


A linguagem R
========================================================
type: sub-section

Características da linguagem
========================================================

- A linguagem R é uma linguagem de manipulação de objetos com diversas características de programação funcional
- Todas as entidades em R são objetos
- R é uma linguagem interativa (pode ser executada através de um prompt) assim como uma linguagem de uso geral com:
  - IO: arquivos, Internet, bancos de dados
  - estruturas de dados: `list`, `vector`, `matrix`, ...
  - estruturas de controle: if, else, while, for, ...
  - administração de memória
  - interfaces com outras linguagens: C/C++, Java, Python, ...

Convenção de nomes
==================

Nomes para objetos no R seguem as seguintes regras:

- são *case sensitive*: `abc` é diferente de `Abc`
- Nomes são formados por: letras, números, `.` e `_`
- Nomes não podem iniciar com: números, `_`
- Nomes podem inciar com `.` apenas quando forem seguidos de letras, nomes com `.42` são números decimais 
- O `.` é importante na convenção de nomes para a criação de objetos (*veremos mais adiante*)

Recomendo dar uma olhada no *style guide* do Hadley Wickham http://r-pkgs.had.co.nz/style.html

Convenção de nomes
==================

- Nomes fora do padrão podem ser utilizados entre crases ou aspas

```{r}
"repl<-" <- function(x, val) structure(x, value=val)
`repl<-`
`+`
```

Outras características
======================

- O código R é formado por comandos que são expressões ou atribuições
- Os comandos são separados por `new-line` ou `;`
- Qualquer código em uma linha após `#` é tratado como comentário


Ambiente R
==========
type: sub-section

Criando variáveis (1)
=====================

Variáveis são criadas atribuindo valores com o operador `<-`

```{r}
a <- 1
```

`ls` lista as variáveis criadas no ambiente

```{r}
ls()
```

Criando Variáveis (2)
=====================

A atribuição também pode ser feita com `=`

```{r}
b = 2
```

e também com o operador `->`

```{r}
3 -> a
```

além da atribuição múltipla

```{r}
b <- a <- 5
5 -> a -> b
```

Removendo variáveis
=================

`rm` remove

```{r}
ls()
rm('a')
ls()
```

Variáveis ocultas
=================

Variáveis que iniciam com `.` são ocultas

```{r}
.hid <- 3
ls()
ls(all.names=TRUE)
```

Limpando o Ambiente
===================

Para limpar o ambiente `rm(list=ls())`

```{r}
rm(list=ls())
ls(all.names=TRUE)
```

ainda mantém as ocultas

```{r}
rm(list=ls(all.names=TRUE))
ls(all.names=TRUE)
```

Investigando variáveis (1)
==========================

Como o R executa um *shell* interativo, uma forma de investigar variáveis é imprimindo as

```{r}
print("Wilson")
print(print)
```

Investigando variáveis (2)
==========================

Imprimir funções em R retorna o código

```{r}
print(uniroot)
```

Investigando variáveis (3)
==========================

Outra forma de investigar as variáveis é com a função `str`

```{r}
str("Wilson")
str(print)
```

Investigando variáveis (4)
==========================

Para investigar funções a função `args`

```{r}
args(c)
args(sd)
```

Onde é que eu estou?
====================

A partir do instante em que foi incializado o R está no *working directory* (`wd`) e para descobri-lo use `getwd`:

```{r}
getwd()
```

para mudar `setwd`:

```{r}
setwd('~')
getwd()
```

